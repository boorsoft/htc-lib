{"version":3,"sources":["utils.js","components/SearchBar.js","components/SingleResult.js","components/Results.js","components/Login.js","components/AdminPanel.js","App.js","serviceWorker.js","index.js"],"names":["apiURL","SearchBar","props","onChange","select","document","querySelector","input","value","placeholder","setState","query","onInputChange","fetch","state","trim","then","res","json","books","passBooks","className","id","type","this","name","defaultValue","React","Component","SingleResult","title","book","author","href","filename","target","Results","map","key","book_id","Login","setToken","token","localStorage","setItem","usernameInput","passwordInput","username","password","submitUser","a","method","headers","body","JSON","stringify","response","status","console","error","onSubmit","e","preventDefault","log","data","redirect","to","AdminPanel","getToken","getItem","logout","clear","teacher","subject","bookToAdd","submitBook","catch","err","formOpen","updateBook","deleteBook","openForm","update","updateForm","bookToUpdateID","closeForm","tokenKey","onClick","style","display","App","path","exact","render","component","Boolean","window","location","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e239e528.chunk.js","sourcesContent":["const apiURL = 'https://htc-lib.herokuapp.com'\r\n\r\nexport {\r\n  apiURL\r\n}","import React from 'react';\r\nimport './SearchBar.css';\r\nimport { apiURL } from '../utils'\r\n\r\nexport default class SearchBar extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      query: 'book',\r\n      books: []\r\n    }\r\n\r\n  }\r\n  \r\n  // On select change\r\n  onChange = () => {\r\n    const select = document.querySelector('#filter');\r\n    const input = document.querySelector('#searchInput');\r\n\r\n    if (select.value === 'teacher') {\r\n      input.placeholder = 'Enter the teacher name...';\r\n    } else if (select.value === 'book') {\r\n      input.placeholder = 'Enter the book title...';\r\n    } else if (select.value === 'subject') {\r\n      input.placeholder = 'Enter the subject name...';\r\n    }\r\n\r\n    this.setState({query: select.value});\r\n  }\r\n\r\n  onInputChange = () => {\r\n    const input = document.querySelector('#searchInput');\r\n\r\n    if (input.value !== '') {\r\n      fetch(`${apiURL}/api/books?${this.state.query}=${input.value.trim()}`)\r\n      .then(res => res.json())\r\n      .then(books => {\r\n        this.setState({books: books});\r\n        // console.log('Books', books);\r\n        this.props.passBooks(books);  // Вызываем метод, который обновляет книги в компоненте App через props\r\n      });\r\n    } else {\r\n      this.setState({books: []});\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"SearchBar\">\r\n        <div className=\"search-container\">\r\n          <input id=\"searchInput\" className=\"search-input text-color-black\" type=\"text\" placeholder=\"Enter the book title...\" onChange={this.onInputChange} />\r\n          <div className=\"select-wrapper\">\r\n              <select name=\"filter\" id=\"filter\" onChange={this.onChange} defaultValue=\"book\">\r\n                <option value=\"book\">Book</option>\r\n                <option value=\"teacher\">Teacher</option>\r\n                <option value=\"subject\">Subject</option>\r\n              </select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react';\r\nimport './Results.css';\r\n\r\n// Компонент одного результата\r\nexport default class SingleResult extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"SingleResult\" title={this.props.book.title}>\r\n        <div className=\"TitlesBox\">\r\n          <h1 className=\"TitleName\">{this.props.book.title}</h1>\r\n          <h1 className=\"AuthorName\">{this.props.book.author}</h1>\r\n        </div>\r\n        <div className=\"Buttons\">\r\n          <a title=\"Download the book\" className=\"ButtDownloadFile fas fa-cloud-download-alt\" href={this.props.book.filename + '?export=download'}></a>\r\n          <a title=\"Open in new TAB\" className=\"ButtOpenNewTab fas fa-external-link-square-alt\" href={this.props.book.filename} target=\"_blank\"></a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react';\r\nimport SingleResult from './SingleResult';\r\nimport './Results.css';\r\n\r\n// Компонент для вывода результатов поиска (книг)\r\nexport default class Results extends React.Component {\r\n\r\n  render() {\r\n    return(\r\n      <div className=\"Results\">\r\n        {/* Проходимся по каждому элементу, и рендерим новый компонет, сколько книг - столько компонентов SingleResult */}\r\n        {this.props.books.map((book) => \r\n          <SingleResult key={book.book_id} book={book}></SingleResult>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}","import React from 'react'\r\nimport '../App.css'\r\nimport './Login.css'\r\nimport { apiURL } from '../utils'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n      redirect: false\r\n    }\r\n  }\r\n\r\n  setToken = (token) => {\r\n    localStorage.setItem('token', token)\r\n  }\r\n\r\n  onInputChange = () => {\r\n    const usernameInput = document.querySelector('#username')\r\n    const passwordInput = document.querySelector('#password')\r\n\r\n    this.setState({\r\n      username: usernameInput.value,\r\n      password: passwordInput.value\r\n    })\r\n  }\r\n\r\n\r\n  // Отправляем POST запрос на сервер\r\n  submitUser = async () => {\r\n    const response = await fetch(`${apiURL}/user/login`, \r\n      {\r\n        method: 'POST', \r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({username: this.state.username, password: this.state.password})\r\n      })\r\n\r\n    // Если сервер ответил 401 или 404\r\n    if (response.status === 401 || response.status === 404) {\r\n      console.error('Authorization failed')\r\n    }\r\n    \r\n    return response.json()\r\n  }\r\n\r\n  // При отправке формы\r\n  onSubmit = async (e) => {\r\n    e.preventDefault()\r\n    console.log('submiting')\r\n\r\n    this.submitUser().then(data => {\r\n      this.setToken(data.token)\r\n      console.log('Token: ', data.token)\r\n      this.setState({redirect: true})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const redirect = this.state.redirect\r\n    if (redirect) return <Redirect to=\"/admin\" />\r\n\r\n    return(\r\n\r\n      <div className=\"App\">\r\n        \r\n        <div className=\"LoginFormContainer\">\r\n          <form className=\"loginForm\" onSubmit={this.onSubmit}>\r\n            <div className=\"input-container\">\r\n              <input id=\"username\" className=\"username text-input\" type=\"text\" placeholder=\"Enter your username...\" onChange={this.onInputChange}/>\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input id=\"password\" className=\"password text-input\" type=\"password\" placeholder=\"Enter your password...\" onChange={this.onInputChange} />\r\n            </div>\r\n\r\n            <div className=\"input-container\">\r\n              <input type=\"submit\" className=\"submitButton\" value=\"Login\" />\r\n            </div>\r\n            \r\n          </form>\r\n        </div>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport '../App.css'\r\nimport './AdminPanel.css'\r\nimport Login from './Login'\r\nimport { apiURL } from '../utils'\r\n\r\nclass AdminPanel extends React.Component {\r\n    constructor(props) {\r\n      super(props)\r\n\r\n      this.state = {\r\n        books: [],\r\n        redirect: false,\r\n        token: '',\r\n        formOpen: false,\r\n        updateForm: false,\r\n        bookToUpdateID: null,\r\n        bookToAdd: {\r\n          title: '',\r\n          author: '',\r\n          teacher: '',\r\n          subject: '',\r\n          filename: ''\r\n        }\r\n      }\r\n    }\r\n\r\n    // метод выполняется после загрузки страницы\r\n    componentDidMount() {\r\n\r\n      // Загрузить книги после загрузки страницы\r\n      fetch(`${apiURL}/api/books`)\r\n        .then((res) => res.json())\r\n        .then((books) => {\r\n          this.setState({books: books})\r\n        })\r\n      \r\n      const tokenKey = this.getToken()\r\n\r\n      this.setState({token: tokenKey}) // назначить токен из localStorage браузера\r\n      console.log('State', this.state)\r\n    }\r\n\r\n    getToken = () => {\r\n        const tokenString = localStorage.getItem('token')\r\n        return tokenString\r\n    }\r\n\r\n    logout = () => {\r\n      localStorage.clear()\r\n      this.setState({redirect: false})\r\n    }\r\n\r\n    // Обновлять объект книги для добавления при изменении input\r\n    onInputChange = () => {\r\n      const title = document.querySelector('#title')\r\n      const author = document.querySelector('#author')\r\n      const teacher = document.querySelector('#teacher')\r\n      const subject = document.querySelector('#subject')\r\n      const filename = document.querySelector('#filename')\r\n\r\n      this.setState({\r\n        bookToAdd: {\r\n          title: title.value,\r\n          author: author.value,\r\n          teacher: teacher.value,\r\n          subject: subject.value,\r\n          filename: filename.value,\r\n        }\r\n      })\r\n\r\n    }\r\n    \r\n    // Отправить запрос на добавление новой книги\r\n    submitBook = (e) => {\r\n      e.preventDefault()\r\n      \r\n      fetch(`${apiURL}/api/books`, {\r\n        method: 'POST',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          title: this.state.bookToAdd.title,\r\n          author: this.state.bookToAdd.author,\r\n          teacher: this.state.bookToAdd.teacher,\r\n          subject: this.state.bookToAdd.subject,\r\n          filename: this.state.bookToAdd.filename,\r\n          token: this.state.token,\r\n        })\r\n      }).then((res) => {\r\n        return res.status\r\n      }).then((data) => console.log(data))\r\n        .catch((err) => console.error(err))\r\n\r\n      this.setState({formOpen: false, bookToAdd: {\r\n            title: '',\r\n            author: '',\r\n            teacher: '',\r\n            subject: '',\r\n            filename: ''\r\n          }\r\n        })\r\n    }\r\n\r\n    updateBook = (id) => {\r\n      fetch(`${apiURL}/api/books/${id}`, {\r\n        method: 'PUT',\r\n        headers: {'Content-Type': 'application/json'},\r\n        body: JSON.stringify({\r\n          title: this.state.bookToAdd.title,\r\n          author: this.state.bookToAdd.author,\r\n          teacher: this.state.bookToAdd.teacher,\r\n          subject: this.state.bookToAdd.subject,\r\n          filename: this.state.bookToAdd.filename,\r\n          token: this.state.token\r\n        })\r\n      }).then((res) => {\r\n        return res.status\r\n      }).then((data) => console.log(data))\r\n        .catch((err) => console.error(err))\r\n    }\r\n\r\n    deleteBook = (id) => {\r\n\r\n      fetch(`${apiURL}/api/books/${id}`, {\r\n      method: 'DELETE',\r\n      headers: {'Content-Type': 'application/json'},\r\n      body: JSON.stringify({\r\n        token: this.state.token\r\n      })\r\n      }).then((res) => {\r\n        return res.status\r\n      }).then((data) => console.log(data))\r\n          .catch((err) => console.error(err))\r\n      \r\n    }\r\n\r\n    openForm = (update = false, book = {}) => {\r\n      this.setState({formOpen: true, updateForm: false})\r\n\r\n      const title = document.querySelector('#title')\r\n      const author = document.querySelector('#author')\r\n      const teacher = document.querySelector('#teacher')\r\n      const subject = document.querySelector('#subject')\r\n      const filename = document.querySelector('#filename')\r\n\r\n      title.value = ''\r\n      author.value = ''\r\n      teacher.value = ''\r\n      subject.value = ''\r\n      filename.value = ''\r\n\r\n      // Если заполняем форму для обновления\r\n      if (update) {\r\n        title.value = book.title\r\n        author.value = book.author\r\n        teacher.value = book.teacher\r\n        subject.value = book.subject\r\n        filename.value = book.filename\r\n        this.setState({updateForm: true, bookToUpdateID: book.book_id, bookToAdd: {\r\n          title: title.value,\r\n          author: author.value,\r\n          teacher: teacher.value,\r\n          subject: subject.value,\r\n          filename: filename.value\r\n        }})\r\n      }\r\n    }\r\n\r\n    closeForm = () => {\r\n      this.setState({formOpen: false})\r\n    }\r\n\r\n    render() {\r\n        const token = this.getToken()\r\n        var formOpen = this.state.formOpen\r\n    \r\n        if (!token) {\r\n            return <Login token={token} />\r\n        }\r\n\r\n        if (this.state.redirect) return <Login />\r\n\r\n        return (\r\n            <div className=\"App\">\r\n            <div id=\"closer\" onClick={this.closeForm} style={{display: formOpen ? 'block' : 'none'}}></div>\r\n\r\n              <div className=\"dashboard-container flex-column\">\r\n                <div className=\"header-container flex-row\">\r\n                  <h1 className=\"header-text\">Dashboard</h1>\r\n                    <i className=\"fas fa-plus icon\" id=\"addBooks\" onClick={() => this.openForm()} />\r\n                    <i className=\"fa fa-power-off icon\" id=\"logoutButton\" onClick={this.logout} />\r\n                </div>\r\n\r\n                <div className=\"container books-list flex-column\">\r\n                  <div className=\"books-list-header flex-row\">\r\n                    <p className=\"booklist-header-text\">Title</p>\r\n                    <p className=\"booklist-header-text\">Author</p>\r\n                    <p className=\"booklist-header-text\">Subject</p>\r\n                    <p className=\"booklist-header-text\">Teacher</p>\r\n                    <p className=\"booklist-header-text\">Filename</p>\r\n                  </div>\r\n                  {this.state.books.map((book) =>\r\n                    <div className=\"book-element flex-row\" key={book.book_id} book={book} onClick={() => this.openForm(true, book)}>\r\n                      <p className=\"title-text\">{book.title}</p>\r\n                      <p className=\"title-text\">{book.author}</p>\r\n                      <p className=\"title-text\">{book.subject}</p>\r\n                      <p className=\"title-text\">{book.teacher}</p>\r\n                      <p className=\"title-text\">{book.filename}</p>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"add-book-form-container\" style={{display: formOpen ? 'flex' : 'none'}}>\r\n                  <form className=\"add-book-form flex-column\" onSubmit={this.state.updateForm ? this.updateBook(this.state.bookToUpdateID) : this.submitBook}>\r\n\r\n                    <input type=\"text\" name=\"title\" id=\"title\" className=\"input\" placeholder=\"Title\" onChange={this.onInputChange}/>\r\n                    <input type=\"text\" name=\"author\" id=\"author\" className=\"input\" placeholder=\"Author\" onChange={this.onInputChange}/>\r\n                    <input type=\"text\" name=\"teacher\" id=\"teacher\" className=\"input\" placeholder=\"Teacher\" onChange={this.onInputChange}/>\r\n                    <input type=\"text\" name=\"subject\" id=\"subject\" className=\"input\" placeholder=\"Subject\" onChange={this.onInputChange}/>\r\n                    <input type=\"text\" name=\"filename\" id=\"filename\" className=\"input\" placeholder=\"Filename\" onChange={this.onInputChange}/>\r\n\r\n                    <div className=\"flex-row buttons-container\">\r\n                      <input type=\"submit\" className=\"submitBook\" value={this.state.updateForm ? 'Update' : 'Submit'} />\r\n                      {this.state.updateForm ? <button className=\"submitBook delete-book\" onClick={this.deleteBook(this.state.bookToUpdateID)}>Delete</button> : null}\r\n                    </div>\r\n\r\n                  </form>\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminPanel","import React from 'react';\r\nimport './App.css';\r\nimport SearchBar from './components/SearchBar';\r\nimport Results from './components/Results';\r\nimport AdminPanel from './components/AdminPanel'\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\r\n\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      books: [] \r\n    }\r\n\r\n  }\r\n\r\n  // Получаем книги в этом компоненте с помощью этого метода\r\n  passBooks = (books) => {\r\n    this.setState({books: books});\r\n    console.log(this.state.books);\r\n  }  \r\n\r\n  render() {\r\n\r\n    return(\r\n      <Router>\r\n\r\n        <Route path=\"/\" exact render={() =>\r\n          <div className=\"App\">\r\n            <SearchBar passBooks={this.passBooks}/> {/* Передаем метод pasBooks через props(атрибуты) */}\r\n            <Results books={this.state.books}/>\r\n          </div>\r\n        }/>\r\n\r\n        <Route path=\"/admin\" component={AdminPanel} />\r\n\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}